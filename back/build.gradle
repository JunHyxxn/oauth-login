plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.junhyxxn'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// starter
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	// QueryDSL 의존성 추가
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-collections'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	// java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	// java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// Test 용 H2 DB
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QClass를 저장할 경로
def generated = "$buildDir/generated/querydsl"

tasks.withType(JavaCompile).configureEach {
	// querydsl QClass 파일 생성 위치를 지정
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// build 할 때 사용할 sourceSet에 QClass를 추가
sourceSets {
	main.java.srcDir generated
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}